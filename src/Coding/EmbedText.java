/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Coding;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileFilter;

/**
 *
 * @author Vijay
 */
public class EmbedText extends javax.swing.JFrame {
    ImageIcon logo = new javax.swing.ImageIcon(getClass().getResource("/Image/logo.jpg"));
    AES aes = new AES();
    BufferedImage originalImage = null, embeddedImage = null;
    public EmbedText() {
        initComponents();
        setIconImage(logo.getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton2 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextMessage = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabelEmbedded = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabelOriginalImage = new javax.swing.JLabel();
        jButtonEmbed = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jButtonReset = new javax.swing.JButton();
        jButtonOpen = new javax.swing.JButton();
        jButtonChange = new javax.swing.JButton();

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButton2.setText("OPEN");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Message", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextMessage.setColumns(20);
        jTextMessage.setRows(5);
        jScrollPane1.setViewportView(jTextMessage);
        jTextMessage.setLineWrap(true);
        jTextMessage.setWrapStyleWord(true);

        jPanel3.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(11, 22, 880, 160));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Embedded Image", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel1.add(jLabelEmbedded, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, 390, 260));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Original Image", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        jPanel2.add(jLabelOriginalImage, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 430, 270));

        jButtonEmbed.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonEmbed.setText("EMBED");
        jButtonEmbed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEmbedActionPerformed(evt);
            }
        });

        jButtonSave.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonSave.setText("SAVE");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        jButtonReset.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonReset.setText("RESET");
        jButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonResetActionPerformed(evt);
            }
        });

        jButtonOpen.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jButtonOpen.setText("OPEN");
        jButtonOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOpenActionPerformed(evt);
            }
        });

        jButtonChange.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButtonChange.setText("Change SecretKey");
        jButtonChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonChangeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addComponent(jButtonEmbed, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonChange, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 458, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 307, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 46, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButtonEmbed, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonSave, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonReset, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButtonOpen, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jButtonChange, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonEmbedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEmbedActionPerformed
        if(jTextMessage.equals("") || originalImage == null){
            JOptionPane.showMessageDialog(this, "No message has been embedded", "No picture or Message Found", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        String Message = jTextMessage.getText();
        String encryptedMessage = aes.encrypt(Message);
        embeddedImage = originalImage.getSubimage(0,0, originalImage.getWidth(), originalImage.getHeight());
        embeddedMessage(embeddedImage, encryptedMessage);
        
        jLabelEmbedded.setIcon(new ImageIcon(embeddedImage));
        this.validate();
    }//GEN-LAST:event_jButtonEmbedActionPerformed

    
    private void embeddedMessage(BufferedImage img, String mess){
        int messageLength = mess.length();
        int imageWidth = img.getWidth(), imageHeight = img.getHeight(), imageSize = imageWidth * imageHeight;
        
        if(messageLength*8+32 > imageSize){
            JOptionPane.showMessageDialog(this, "Message is too long for this Image", "Message too Long!", JOptionPane.ERROR_MESSAGE);
        }
        else{
            embedInteger(img, messageLength, 0, 0);
            byte b[] = mess.getBytes();
            for(int i=0; i< b.length; i++)
                embedByte(img, b[i], i*8+32, 0);
        }
    }
    
    private void embedInteger(BufferedImage img, int n, int start, int storageBit){
        int maxX = img.getWidth(), maxY = img.getHeight(), startX = start/maxY, startY = start - startX*maxY, count = 0;
        
        for(int i = startX; i<maxX && count < 32; i++){
            for(int j=startY; j<maxY && count < 32; j++){
                int rgb = img.getRGB(i, j), bit = getBitValue(n, count);
                rgb = setBitValue(rgb, storageBit, bit);
                img.setRGB(i, j, rgb);
                count++;
            }
        }
    }
    
    private void embedByte(BufferedImage img, byte b, int start, int storageBit){
        int maxX = img.getWidth(), maxY = img.getHeight(), startX = start/maxY, startY = start - startX*maxY, count = 0;
        
        for(int i = startX; i<maxX && count < 8; i++){
            for(int j = startY; j<maxY && count < 8 ; j++){
                int rgb = img.getRGB(i, j), bit = getBitValue(b, count);
                rgb = setBitValue(rgb, storageBit, bit);
                img.setRGB(i, j, rgb);
                count++;
            }
        }
    }
    
    private int getBitValue(int n, int location){
        int v = (int)(n & Math.round(Math.pow(2, location)));
        return v == 0?0:1;
    }
    
    private int setBitValue(int n, int location, int bit){
        int toggle = (int) Math.pow(2, location), bv = getBitValue(n, location);
        
        if(bv == bit)
            return n;
        if(bv == 0 && bit ==1)
            n |= toggle;
        else if(bv == 1 && bit ==0)
            n ^= toggle;
        return n;
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        if(embeddedImage == null){
            JOptionPane.showMessageDialog(this, "No message has been embedded", "Nothing to save", JOptionPane.ERROR_MESSAGE);
        }
        else{
            File file = showFileDialog(false);
            if(file == null){
                return;
            }
            String name = file.getName();
            String Extention = name.substring(name.lastIndexOf(".")+1).toLowerCase();
            
            if(!Extention.equals("png") && !Extention.equals("bmp")){
                Extention = "png";
                file = new File(file.getAbsolutePath()+".png");
            }
            if(file.exists()) file.delete();
            try{
                ImageIO.write(embeddedImage, Extention.toUpperCase(), file);
            }
            catch(IOException ex){
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonResetActionPerformed
        jTextMessage.setText("");
        originalImage = null;
        embeddedImage = null;
        jLabelOriginalImage.setIcon(null);
        jLabelEmbedded.setIcon(null);
    }//GEN-LAST:event_jButtonResetActionPerformed
    
    private File showFileDialog(final boolean open){
        JFileChooser fc = new JFileChooser("open an image");
        
        FileFilter filefilter = new FileFilter(){
            @Override
            public boolean accept(File file) {
                String name = file.getName().toLowerCase();
                if(open)
                    return file.isDirectory()||name.endsWith(".jpg")||name.endsWith(".jpeg")||name.endsWith(".png")||name.endsWith(".bmg");
            return file.isDirectory()||name.endsWith(".png")||name.endsWith(".bmg");
            }

            @Override
            public String getDescription() {
                if(open)
                    return "Image(*.jpg, *.jpeg, *.png, *.bmp)";
                return "Image (*.png, *.bmp)";
            }  
        };
        fc.setAcceptAllFileFilterUsed(false);
        fc.addChoosableFileFilter(filefilter);
        
        File file = null;
        if(open && fc.showOpenDialog(this)==fc.APPROVE_OPTION)
            file = fc.getSelectedFile();
        else if(!open && fc.showSaveDialog(this)== fc.APPROVE_OPTION)
            file = fc.getSelectedFile();
        return file;
    }
    
    
    private void jButtonOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonOpenActionPerformed
        File file = showFileDialog(true);
        
        if(file == null){
            return;
        }
        try {
            originalImage = ImageIO.read(file);
            jLabelOriginalImage.setIcon(new ImageIcon(originalImage));
            this.validate();
        } catch (IOException ex) {
            
        }
        
    }//GEN-LAST:event_jButtonOpenActionPerformed

    private void jButtonChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonChangeActionPerformed
        ChangeSecretKey csk = new ChangeSecretKey();
        csk.setVisible(true);
        csk.setLocationRelativeTo(null);
    }//GEN-LAST:event_jButtonChangeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EmbedText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EmbedText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EmbedText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EmbedText.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EmbedText().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButtonChange;
    private javax.swing.JButton jButtonEmbed;
    private javax.swing.JButton jButtonOpen;
    private javax.swing.JButton jButtonReset;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JLabel jLabelEmbedded;
    private javax.swing.JLabel jLabelOriginalImage;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextMessage;
    // End of variables declaration//GEN-END:variables
}
